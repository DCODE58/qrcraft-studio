// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jefpfwrwlcphqgphdbrj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImplZnBmd3J3bGNwaHFncGhkYnJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY5MDI4NTQsImV4cCI6MjA3MjQ3ODg1NH0.nGcE6Sz-I6KhVq0oOcRTy6KiM9xInpOkTBmCdA0ga7k";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Safe storage for Safari Private Mode
const getStorage = () => {
  try {
    if (typeof window !== 'undefined' && window.localStorage) {
      // Test if localStorage is actually working
      window.localStorage.setItem('test', 'test');
      window.localStorage.removeItem('test');
      return window.localStorage;
    }
  } catch (e) {
    console.warn('localStorage not available, using fallback');
  }
  
  // Fallback in-memory storage for Safari Private Mode
  const memoryStorage = {
    getItem: (key: string) => memoryStorage[key] || null,
    setItem: (key: string, value: string) => { memoryStorage[key] = value; },
    removeItem: (key: string) => { delete memoryStorage[key]; },
  };
  return memoryStorage;
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: getStorage() as any,
    persistSession: true,
    autoRefreshToken: true,
  }
});